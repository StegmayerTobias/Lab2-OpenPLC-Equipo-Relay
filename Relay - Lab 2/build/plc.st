TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK


PROGRAM program0
  VAR
    SENSOR_IR : BOOL := 0;
    SWITCH : BOOL := 0;
    POS_X : UINT := 500;
    POS_Y : UINT := 500;
    LED : BOOL := 0;
    RELE : BOOL := 0;
    BOCINA : BOOL := 0;
  END_VAR
  VAR
    SR0 : SR;
    R_TRIG0 : R_TRIG;
    TP0 : TP;
    TOF0 : TOF;
    SR1 : SR;
    R_TRIG1 : R_TRIG;
    ZM_X_LEFT : UINT := 400;
    ZM_X_RIGHT : UINT := 600;
    ZM_Y_TOP : UINT := 600;
    ZM_Y_BOTTOM : UINT := 400;
    TP1 : TP;
    TOF1 : TOF;
    _TMP_NOT2_OUT : BOOL;
    _TMP_AND34_OUT : BOOL;
    _TMP_AND1_OUT : BOOL;
    _TMP_NOT7_OUT : BOOL;
    _TMP_AND10_OUT : BOOL;
    _TMP_AND6_OUT : BOOL;
    _TMP_AND8_OUT : BOOL;
    _TMP_NOT18_OUT : BOOL;
    _TMP_AND17_OUT : BOOL;
    _TMP_NOT3_OUT : BOOL;
    _TMP_AND4_OUT : BOOL;
    _TMP_GE45_OUT : BOOL;
    _TMP_LE44_OUT : BOOL;
    _TMP_GE15_OUT : BOOL;
    _TMP_LE13_OUT : BOOL;
    _TMP_OR48_OUT : BOOL;
    _TMP_AND11_OUT : BOOL;
    _TMP_NOT25_OUT : BOOL;
    _TMP_AND23_OUT : BOOL;
    _TMP_OR22_OUT : BOOL;
  END_VAR

  _TMP_NOT2_OUT := NOT(SR0.Q1);
  R_TRIG0(CLK := SENSOR_IR AND SENSOR_IR);
  _TMP_AND34_OUT := AND(_TMP_NOT2_OUT, R_TRIG0.Q);
  _TMP_AND1_OUT := AND(R_TRIG0.Q, SR0.Q1);
  SR0(S1 := _TMP_AND34_OUT, R := _TMP_AND1_OUT);
  RELE := SR0.Q1;
  _TMP_NOT7_OUT := NOT(SR1.Q1);
  _TMP_AND10_OUT := AND(SR0.Q1, SWITCH);
  R_TRIG1(CLK := _TMP_AND10_OUT);
  _TMP_AND6_OUT := AND(_TMP_NOT7_OUT, R_TRIG1.Q);
  _TMP_AND8_OUT := AND(R_TRIG1.Q, SR1.Q1);
  SR1(S1 := _TMP_AND6_OUT, R := _TMP_AND8_OUT);
  _TMP_NOT18_OUT := NOT(SR1.Q1);
  _TMP_AND17_OUT := AND(SR0.Q1, _TMP_NOT18_OUT);
  TOF0(IN := TP0.Q, PT := T#2500ms);
  _TMP_NOT3_OUT := NOT(TOF0.Q);
  TP0(IN := _TMP_NOT3_OUT, PT := T#500ms);
  _TMP_AND4_OUT := AND(_TMP_AND17_OUT, TP0.Q);
  _TMP_GE45_OUT := GE(POS_X, ZM_X_RIGHT);
  _TMP_LE44_OUT := LE(POS_X, ZM_X_LEFT);
  _TMP_GE15_OUT := GE(POS_Y, ZM_Y_TOP);
  _TMP_LE13_OUT := LE(POS_Y, ZM_Y_BOTTOM);
  _TMP_OR48_OUT := OR(_TMP_GE45_OUT, _TMP_LE44_OUT, _TMP_GE15_OUT, _TMP_LE13_OUT);
  _TMP_AND11_OUT := AND(SR1.Q1, _TMP_OR48_OUT);
  TOF1(IN := TP1.Q, PT := T#1000ms);
  _TMP_NOT25_OUT := NOT(TOF1.Q);
  TP1(IN := _TMP_NOT25_OUT, PT := T#500ms);
  _TMP_AND23_OUT := AND(_TMP_AND11_OUT, TP1.Q);
  _TMP_OR22_OUT := OR(_TMP_AND4_OUT, _TMP_AND23_OUT);
  BOCINA := _TMP_OR22_OUT;
  LED := SR1.Q1;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : program0;
  END_RESOURCE
END_CONFIGURATION
